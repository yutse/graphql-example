{"version":3,"sources":["queryql.js","App.js","index.js"],"names":["gql","_templateObject","ExchangeRates","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","value","inherits","createClass","key","_this2","react_default","a","createElement","react_apollo_browser_umd","query","_templateObject2","_ref","loading","error","data","item","tasks","find","x","id","onChange","e","console","log","target","setState","map","_ref2","index","title","is_completed","owner","name","React","Component","ExchangeRates1","_React$Component2","_getPrototypeOf3","_this3","_len2","_key2","_this4","_templateObject3","_ref3","users","_ref4","_ref5","client","ApolloClient","uri","App","className","queryql_ExchangeRates","queryql_ExchangeRates1","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.916f7244.chunk.js","sourcesContent":["import gql from 'graphql-tag';\nimport { ApolloProvider, Query, Mutation } from 'react-apollo';\nimport React from 'react';\n\nconst ADD_TODO = gql`\n  mutation NewTask($title: String!) {\n    newTask(title: $title) {\n      title\n    }\n  }\n`;\n\n// const AddTodo = () => {\n//   let input;\n\n//   return (\n//     <Mutation mutation={ADD_TODO}>\n//       {(newTask, { data }) => (\n//         <div>\n//           <form\n//             onSubmit={e => {\n//               e.preventDefault();\n//               newTask({ variables: { title: input.value } });\n//               input.value = '';\n//             }}\n//           >\n//             <input\n//               ref={node => {\n//                 input = node;\n//               }}\n//             />\n//             <button type=\"submit\">Add Todo</button>\n//           </form>\n//         </div>\n//       )}\n//     </Mutation>\n//   );\n// };\n\nexport class ExchangeRates extends React.Component {\n  state = { value: '' };\n\n  render() {\n    return (\n      <div>\n        <Query\n          query={gql`\n            {\n              tasks {\n                id\n                title\n                is_completed\n                owner {\n                  id\n                  name\n                }\n              }\n            }\n          `}\n        >\n          {({ loading, error, data }) => {\n            if (loading) return <p>Loading...</p>;\n            if (error) return <p>Error :(</p>;\n\n            let item = data.tasks.find(x => x.id == this.state.value);\n            return (\n              <div>\n                <select\n                  onChange={e => {\n                    console.log(e.target.value);\n                    this.setState({ value: e.target.value });\n                  }}\n                >\n                  <option value={''}>{'請選擇'}</option>\n                  {data.tasks.map(({ id, title, is_completed, owner }, index) => (\n                    <option key={index} value={id}>\n                      {title}\n                    </option>\n                  ))}\n                </select>\n                <br />\n                owner:\n                <br />\n                <div>\n                  id: {!!item ? item.owner.id : '請選擇'}\n                  <br />\n                  name: {!!item ? item.owner.name : '請選擇'}\n                </div>\n              </div>\n            );\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\n\nexport class ExchangeRates1 extends React.Component {\n  state = { value: '' };\n\n  render() {\n    return (\n      <div>\n        <Query\n          query={gql`\n            {\n              users {\n                id\n                name\n                tasks {\n                  id\n                  title\n                }\n              }\n            }\n          `}\n        >\n          {({ loading, error, data }) => {\n            if (loading) return <p>Loading...</p>;\n            if (error) return <p>Error :(</p>;\n\n            let item = data.users.find(x => x.id == this.state.value);\n            return (\n              <div>\n                <select\n                  onChange={e => {\n                    console.log(e.target.value);\n                    this.setState({ value: e.target.value });\n                  }}\n                >\n                  <option value={''}>{'請選擇'}</option>\n                  {data.users.map(({ id, name }, index) => (\n                    <option key={index} value={id}>\n                      {name}\n                    </option>\n                  ))}\n                </select>\n                <br />\n                tasks:\n                <br />\n                {!!item\n                  ? item.tasks.map(({ id, title, is_completed }, index) => (\n                      <div key={index}>\n                        id:{id}, title: {title}, {is_completed ? '已完成' : '未完成'}\n                      </div>\n                    ))\n                  : '請選擇'}\n              </div>\n            );\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { ApolloProvider } from 'react-apollo';\nimport { ExchangeRates, ExchangeRates1 } from './queryql';\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://ee1cfce1.ngrok.io/graphql/',\n  // uri: 'http://localhost:4000/',\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <div className=\"App\">\n          <p>React Graphql 起手式</p>\n          <div>\n            <ExchangeRates />\n            <br />\n            <br />\n            <ExchangeRates1 />\n          </div>\n        </div>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}