{"version":3,"sources":["queryql.js","App.js","index.js"],"names":["gql","_templateObject","ExchangeRates","react_default","a","createElement","react_apollo_browser_umd","query","_templateObject2","_ref","loading","error","data","tasks","map","_ref2","index","id","title","is_completed","owner","key","style","paddingLeft","textAlign","concat","name","client","ApolloClient","uri","App","className","queryql_ExchangeRates","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"msBAIiBA,IAAHC,KAAd,IAmCaC,EAAgB,kBAC3BC,EAAAC,EAAAC,cAACC,EAAA,MAAD,CACEC,MAAOP,IAAFQ,MAcJ,SAAAC,GAA8B,IAA3BC,EAA2BD,EAA3BC,QAASC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,KAClB,OAAIF,EAAgBP,EAAAC,EAAAC,cAAA,uBAChBM,EAAcR,EAAAC,EAAAC,cAAA,qBAEXO,EAAKC,MAAMC,IAAI,SAAAC,EAAqCC,GAArC,IAAGC,EAAHF,EAAGE,GAAIC,EAAPH,EAAOG,MAAOC,EAAdJ,EAAcI,aAAcC,EAA5BL,EAA4BK,MAA5B,OACpBjB,EAAAC,EAAAC,cAAA,OAAKgB,IAAKL,GACRb,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,YAAa,OAAQC,UAAW,SAA5C,OAAAC,OACUR,GACRd,EAAAC,EAAAC,cAAA,WAFF,UAAAoB,OAGaP,GACXf,EAAAC,EAAAC,cAAA,WAJF,iBAAAoB,OAKoBN,GAClBhB,EAAAC,EAAAC,cAAA,WANF,aAAAoB,OAOgBL,EAAMH,IACpBd,EAAAC,EAAAC,cAAA,WARF,eAAAoB,OASkBL,EAAMM,aChE5BC,EAAS,UAAIC,GAAa,CAC5BC,IAAK,sCAqBMC,mLAfX,OACE3B,EAAAC,EAAAC,cAACC,EAAA,eAAD,CAAgBqB,OAAQA,GACtBxB,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,OACb5B,EAAAC,EAAAC,cAAA,6CAGAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2B,EAAD,gBATMC,aCNlBC,IAASC,OAAOhC,EAAAC,EAAAC,cAAC+B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.240500b3.chunk.js","sourcesContent":["import gql from 'graphql-tag';\nimport { ApolloProvider, Query, Mutation } from 'react-apollo';\nimport React from 'react';\n\nconst ADD_TODO = gql`\n  mutation NewTask($title: String!) {\n    newTask(title: $title) {\n      title\n    }\n  }\n`;\n\n// const AddTodo = () => {\n//   let input;\n\n//   return (\n//     <Mutation mutation={ADD_TODO}>\n//       {(newTask, { data }) => (\n//         <div>\n//           <form\n//             onSubmit={e => {\n//               e.preventDefault();\n//               newTask({ variables: { title: input.value } });\n//               input.value = '';\n//             }}\n//           >\n//             <input\n//               ref={node => {\n//                 input = node;\n//               }}\n//             />\n//             <button type=\"submit\">Add Todo</button>\n//           </form>\n//         </div>\n//       )}\n//     </Mutation>\n//   );\n// };\n\nexport const ExchangeRates = () => (\n  <Query\n    query={gql`\n      {\n        tasks {\n          id\n          title\n          is_completed\n          owner {\n            id\n            name\n          }\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <p>Loading...</p>;\n      if (error) return <p>Error :(</p>;\n\n      return data.tasks.map(({ id, title, is_completed, owner }, index) => (\n        <div key={index}>\n          <p style={{ paddingLeft: '15px', textAlign: 'left' }}>\n            {`id: ${id}`}\n            <br />\n            {`title: ${title}`}\n            <br />\n            {`is_completed: ${is_completed}`}\n            <br />\n            {`owner.id: ${owner.id}`}\n            <br />\n            {`owner.name: ${owner.name}`}\n          </p>\n        </div>\n      ));\n    }}\n  </Query>\n);\n","import React, { Component } from 'react';\nimport './App.css';\nimport { ApolloProvider } from 'react-apollo';\nimport { ExchangeRates } from './queryql';\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n    uri: 'http://ee1cfce1.ngrok.io/graphql/',\n  // uri: 'http://localhost:4000/',\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <div className=\"App\">\n          <p>\n            React Graphql 起手式\n          </p>\n          <div>\n            <ExchangeRates />\n          </div>\n        </div>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}